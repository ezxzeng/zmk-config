#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <0>;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <0>;
        };

        rst: reset_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "reset_hold_tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <999>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        bsp_l: bsp_l {
            compatible = "zmk,behavior-hold-tap";
            label = "BSP_L";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
        };

        placeholder: placeholder {
            compatible = "zmk,behavior-hold-tap";
            label = "PLACEHOLDER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&rst 7 Q      &kp W         &kp E          &kp R           &kp T          &kp Y          &kp U         &kp I        &kp O       &rst 7 P
&hm LGUI A    &hm LALT S    &hm LCTRL D    &hs LSHIFT F    &kp G          &kp H          &hs RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI
&kp Z         &kp X         &kp C          &kp V           &kp B          &kp N          &kp M         &kp COMMA    &kp DOT     &kp FSLH
                            &kp LCTRL      &mt LGUI ESC    &lt 3 ENTER    &bsp_l 1 BSPC  &kp SPACE     &kp RSHIFT
            >;
        };

        sym_layer {
            bindings = <
&kp EXCL          &kp AT               &kp LPAR          &kp RPAR           &kp BACKSLASH    &kp EQUAL  &kp N7        &kp N8        &kp N9       &kp BSPC
&hm LGUI GRAVE    &hm LALT APOS        &hm LCTRL LBKT    &hs LSHIFT RBKT    &kp UNDER        &kp MINUS  &hs RSHFT N4  &hm RCTRL N5  &hm RALT N6  &hm RGUI SEMI
&kp PIPE          &kp DOUBLE_QUOTES    &kp LT            &kp GT             &kp SLASH        &kp N0     &kp N1        &kp N2        &kp N3       &tog 2
                                       &trans            &trans             &lt 4 ENTER      &trans     &kp SPACE     &trans
            >;
        };

        rnav_layer {
            bindings = <
&trans    &trans    &trans    &trans    &trans    &mwh SCROLL_UP      &kp HOME            &kp UP      &kp END              &none
&trans    &trans    &trans    &trans    &trans    &mwh SCROLL_DOWN    &kp LEFT            &kp DOWN    &kp RIGHT            &kp RET
&trans    &trans    &trans    &trans    &trans    &kp TAB             &mwh SCROLL_LEFT    &none       &mwh SCROLL_RIGHT    &tog 2
          &trans    &trans    &trans    &trans    &mo 4               &trans              &trans      &trans
            >;
        };

        nav_layer {
            bindings = <
&kp LEFT     &kp DOWN     &kp UP       &kp RIGHT      &tog 7      &none        &kp HOME     &kp UP       &kp END      &kp PG_UP
&kp LGUI     &kp LALT     &kp LCTRL    &kp LSHFT      &kp BSPC    &none        &kp LEFT     &kp DOWN     &kp RIGHT    &kp PG_DN
&kp SPACE    &kp SPACE    &kp SPACE    &kp SPACE      &kp CAPS    &none        &kp SPACE    &kp SPACE    &kp SPACE    &kp SPACE
             &trans       &kp DEL      &lt 5 SPACE    &trans      &lt 5 DEL    &lt 4 TAB    &trans       &trans
            >;
        };

        mouse_layer {
            bindings = <
&none        &mkp LCLK            &mwh SCROLL_UP     &mkp RCLK           &trans    &trans    &mkp LCLK          &mmv MOVE_UP      &mkp RCLK           &trans
&mkp MCLK    &mwh SCROLL_LEFT    &mwh SCROLL_DOWN    &mwh SCROLL_RIGHT    &trans    &trans    &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &mkp MCLK
&kp LGUI     &kp LALT            &kp LCTRL           &kp LSHFT            &trans    &trans    &kp RSHFT         &kp RCTRL         &kp RALT           &kp RGUI
             &trans              &trans              &trans               &trans    &trans    &trans            &trans            &trans
            >;
        };

        func_layer {
            bindings = <
&bootloader        &kp C_VOLUME_UP      &kp C_BRIGHTNESS_INC    &bt BT_SEL 0    &bt BT_SEL 1    &kp F12  &kp F7  &kp F8  &kp F9  &trans
&out OUT_USB       &kp C_VOLUME_DOWN    &kp C_BRIGHTNESS_DEC    &bt BT_SEL 2    &bt BT_SEL 3    &kp F11  &kp F4  &kp F5  &kp F6  &trans
&kp PRINTSCREEN    &mt C_MUTE K_MUTE    &out OUT_BLE            &bt BT_SEL 4    &bt BT_CLR      &kp F10  &kp F1  &kp F2  &kp F3  &trans
                                        &trans                  &trans          &trans          &trans   &trans  &trans
            >;
        };

        left_num {
            bindings = <
&kp EQUAL         &kp N7         &kp N8          &kp N9           &tog 5         &trans  &trans  &trans  &trans  &trans
&hm LGUI MINUS    &hm LALT N4    &hm LCTRL N5    &hs LSHFT N6     &kp DOT        &trans  &trans  &trans  &trans  &trans
&kp N0            &kp N1         &kp N2          &kp N3           &kp COMMA      &trans  &trans  &trans  &trans  &trans
                                 &trans          &mt LSHFT TAB    &lt 6 ENTER    &trans  &trans  &trans
            >;
        };

        left_sym {
            bindings = <
&kp ESC      &kp COLON            &kp LPAR           &kp RPAR    &kp BSPC     &trans  &trans  &trans  &trans  &trans
&kp GRAVE    &kp SQT              &kp LBKT           &kp RBKT    &kp UNDER    &trans  &trans  &trans  &trans  &trans
&kp BSLH     &kp DOUBLE_QUOTES    &kp LT             &kp GT      &kp FSLH     &trans  &trans  &trans  &trans  &trans
                                  &mt LSHFT SPACE    &trans      &trans       &trans  &trans  &trans
            >;
        };

        reset {
            bindings = <
&trans    &trans    &out OUT_USB    &out OUT_BLE    &bootloader    &bootloader  &out OUT_BLE  &out OUT_USB  &trans  &trans
&trans    &trans    &trans          &trans          &sys_reset     &sys_reset   &trans        &trans        &trans  &trans
&trans    &trans    &trans          &trans          &trans         &trans       &trans        &trans        &trans  &trans
                    &out OUT_USB    &out OUT_BLE    &bootloader    &bootloader  &out OUT_BLE  &out OUT_USB
            >;
        };
    };
};
